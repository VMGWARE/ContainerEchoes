# Use node as the base image for building both server and backend
FROM node:21.7 AS builder

# Install dumb-init to avoid zombie processes and ensure minimal installation
RUN apt-get update && \
    apt-get install -y --no-install-recommends dumb-init && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get autoremove -y

# Build the server
WORKDIR /app/server
COPY server/package*.json ./
RUN npm ci --omit=dev
COPY core /app/core
COPY server/ ./
RUN npm install /app/core

# Build the web, including the fix for @rollup/rollup-linux-arm64-gnu
WORKDIR /app/web
COPY web/package*.json ./
COPY web/ ./
RUN npm install && \
    npm run build:icons && \
    npm install --save-dev @rollup/rollup-linux-arm64-gnu && \
    npm run build

# Use Apache to serve the web and proxy to the server
FROM httpd:2.4
ARG S6_OVERLAY_VERSION=3.1.6.2

# Install Node.js, curl, and git in the Apache stage
RUN apt-get update && \
    apt-get install -y curl git xz-utils && \
    curl -sL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install s6-overlay compatible with ARM64
ADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz /tmp/
ADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-aarch64.tar.xz /tmp/
RUN tar -C / -Jxpf /tmp/s6-overlay-noarch.tar.xz && \
    tar -C / -Jxpf /tmp/s6-overlay-aarch64.tar.xz && \
    rm /tmp/s6-overlay-noarch.tar.xz /tmp/s6-overlay-aarch64.tar.xz

# Copy web build output to Apache's htdocs
COPY --from=builder /app/web/dist/ /usr/local/apache2/htdocs/

# Copy the core, server, and other configuration files
COPY --from=builder /app/core/ /usr/local/core/
COPY --from=builder /app/server/ /usr/local/server/
COPY ./docker/.htaccess /usr/local/apache2/htdocs/
COPY ./docker/my-httpd.conf /usr/local/apache2/conf/

# Setup s6 services
COPY ./docker/apache-run /etc/services.d/apache/run
COPY ./docker/nodejs-run /etc/services.d/nodejs/run
RUN chmod +x /etc/services.d/apache/run /etc/services.d/nodejs/run

# Expose port 80
EXPOSE 80

# Use s6-overlay as the entrypoint
ENTRYPOINT ["/init"]
