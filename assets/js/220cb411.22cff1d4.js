"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[390],{1592:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var t=i(5893),o=i(1151);const s={sidebar_position:4},r="Configuring the Agent",a={id:"agent-configuration",title:"Configuring the Agent",description:"Agent Role and Functionality",source:"@site/docs/40-agent-configuration.md",sourceDirName:".",slug:"/agent-configuration",permalink:"/ContainerEchoes/docs/agent-configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/VMGWARE/ContainerEchoes/tree/master/docs/docs/40-agent-configuration.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Environment Variables",permalink:"/ContainerEchoes/docs/env-vars"},next:{title:"Managing the Server",permalink:"/ContainerEchoes/docs/server-management"}},c={},l=[{value:"Agent Role and Functionality",id:"agent-role-and-functionality",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Setting Up the Agent",id:"setting-up-the-agent",level:3},{value:"Environment-Specific Settings",id:"environment-specific-settings",level:3},{value:"Agent Environment Variables",id:"agent-environment-variables",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Agent Initialization and Communication",id:"agent-initialization-and-communication",level:2},{value:"Testing and Verification",id:"testing-and-verification",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"configuring-the-agent",children:"Configuring the Agent"}),"\n",(0,t.jsx)(n.h2,{id:"agent-role-and-functionality",children:"Agent Role and Functionality"}),"\n",(0,t.jsx)(n.p,{children:"The Container Echoes Agent is a critical component of the log management system, capturing logs from Docker containers and forwarding them to the Container Echoes Server. Accurate configuration is key for efficient log collection and transmission."}),"\n",(0,t.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsx)(n.h3,{id:"setting-up-the-agent",children:"Setting Up the Agent"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Installation"}),": Deploy the agent as a Docker container on each host using the provided Docker image."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"environment-specific-settings",children:"Environment-Specific Settings"}),"\n",(0,t.jsx)(n.p,{children:"Customize settings like network configurations, proxy settings, or Docker socket paths based on your environment."}),"\n",(0,t.jsx)(n.h2,{id:"agent-environment-variables",children:"Agent Environment Variables"}),"\n",(0,t.jsx)(n.p,{children:"Ensure these environment variables are set:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AGENT_SERVER_URL"}),": The URL of the Container Echoes Server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AGENT_SECRET"}),": A secret key for secure communication with the server."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Resource Allocation"}),": Allocate sufficient resources (CPU and memory) to the agent."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Security"}),": Ensure encrypted and authenticated traffic if the agent communicates over the network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Log Rotation"}),": Implement log rotation to prevent disk space issues."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"agent-initialization-and-communication",children:"Agent Initialization and Communication"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Health Check"}),": The agent checks the server's health at ",(0,t.jsx)(n.code,{children:"/general/healthcheck"})," before initiating communication."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"WebSocket Connection"}),": Uses WebSocket for real-time communication with the server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Message Handling"}),": The agent handles various message types, including ",(0,t.jsx)(n.code,{children:"handshake"}),", ",(0,t.jsx)(n.code,{children:"agentInfo"}),", and ",(0,t.jsx)(n.code,{children:"containerList"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Agent Identification"}),": The server sends an ",(0,t.jsx)(n.code,{children:"agentId"})," for identification purposes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Termination Handling"}),": The agent listens for termination signals and gracefully closes the WebSocket connection."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testing-and-verification",children:"Testing and Verification"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Run a test container to generate logs and verify their appearance in the Container Echoes Server interface."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check the agent's logs for error messages."}),"\n",(0,t.jsx)(n.li,{children:"Common issues: network connectivity, configuration errors, resource constraints."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.p,{children:["With the agent configured, focus on managing the Container Echoes Server and exploring its features as detailed in ",(0,t.jsx)(n.a,{href:"server-management",children:"Managing the Container Echoes Server"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>r});var t=i(7294);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);